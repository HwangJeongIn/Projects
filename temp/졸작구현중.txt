BT

노드의 상태

 - Continue
	실행중이라는 의미로 볼 수 있을 것 같다. 이 형식이 반환되면 노드를 순회하던 것을 멈춘다. // 즉 컨티뉴 전까지만 실행된다.



상속받은 노드 형식 종류

 - BTNode
	Tick을 오버라이딩 할 수 있는 추상클래스이다.

	- Branch
		내부적으로 차일드 노드들을 가지고 있다.
		OpenBranch에 의해서 차일드 노드 추가 가능 파라미터 params BTNode[] children // , 단위로 끝없이 파라미터를 넘겨줄 수 있음 // C++에서 찾아보기
		// 내부적으로 순차적으로 들어간다.
		ResetChild에 의해 ActiveChild갯수를 0으로 줄이고 아래 노드들을 순회하면서 모두 리셋시킨다.

		 - Block




필요한 노드 종류

// 모든 노드에 대해서 하나라도 Continue상태를 반환하는 노드가 있다면 리턴한다.

 - Root // Block상속받은 Root 자체
	위부터 왼쪽에서 오른쪽으로 돌면서 확인 순차적으로 추가해둔 노드들부터 확인

 - Suquence // Branch상속받은 Suquence 자체
	내부의 모든 노드가 Success를 반환하면 Success를 반환 // 하나라도 failure이면 failure 반환 //

 - Selector // Branch상속받은 Selector 자체
	내부의 노드가 하나라도 Success를 반환하면 Success를 반환한다. // 그노드 실행

 - If // Block상속받은 ConditionalBranch 자체
	내부 함수가 true반환시 내부에 OpenBranch에 의해 만들어준 노드가 모두 Continue가 아니면 모두실행 후 Success반환 / 아닐시 Continue반환
		내부 함수가 false 반환시 내부 자식노드들 모두 리셋후 Failure반환
	// Success와 Failure에 관계없이 모두 실행

 - While // Block상속받은 While 자체
	내부 함수가 true반환시 내부에 OpenBranch에 의해 만들어준 노드가 모두 Continue가 아니면 모두실행
	내부 함수가 false 반환시 내부 자식노드들 모두 리셋후 Failure반환
	최종적으로 true일때 Continue반환 // 즉 여기서 노드순회가 멈춤(Root부터 돌다가)

 - Call // BTNode상속받은 Action자체
	들어온 함수포인터(void(void))가 null이 아닌 경우 함수를 실행하고 Success를 반환한다.
	항상 Success를 반환하도록 해준다

 - Condition // BTNode 상속받은 Condition 자체
	들어온 함수포인터(bool(void))의 함수가 반환하는 값에 따라서 Success or Failure 반환











* 구현목록
 - 하이트맵을 이용한 터레인 수정 완료
 - 빌보드 수정 완료
 - InputManager

* 개선해야할점
 - 앞에있는 오브젝트가 먼저 렌더링 되어서 뒷배경이 제대로 투영되지 않는 현상
 // 렌더링 순서를 뒤에있는 객체부터 하면 해결 // 쿼드트리 사용 
 - 터레인 위를 움직일때 터레인의 높이만 받아서 움직이기 때문에 점프불가
 // 터레인높이 보다 작을때 터레인 높이로 초기화하는 방법 : 중력이 적용되면 부자연스럽게 보인다.(오브젝트가 흔들림)


* 기존 InputManager에서 수정된 사항
 - _kbhit()사용 =>> (GetAsyncKeyState(virtual keycode) & 0x8000f) 변경
 // 윈도우 프로그래밍에서는 _kbhit()사용할 수 없음 // msdn 참고

 - 기존구조에서는 prefetch로 한프레임당 하나의 키를 받아올 수 있었다. // 즉 움직이면서 공격을 못한다. // ex. Arrow_up + Space
 =>> 모든 가상키에 대해서 (256개) 프레임이 시작될때 인풋을 모두 받아서 현재 가상키 상태 배열에 저장
  + 끝날때 이전프레임 가상키 상태배열을 현재프레임으로 최신화
 그 키가 눌렸는지 안눌렸는지는 그 가상키 상태 배열들(현재프레임 / 이전프레임) 참고해서 어떤상태인지 판별(up / down / stay)